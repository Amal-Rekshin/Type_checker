1st program

ORG 0000H
LOOP:
  CLR P1.0
  ACALL DELAY
  SETB P1.0
  ACALL DELAY
  SJMP LOOP

DELAY:
  MOV R2, #0FFH
WAIT: DJNZ R2, WAIT
  RET


2nd program

ORG 0x0000
MAIN:
  MOV A, #0xAA
  MOV 0x30, R0
  MOV A, 0x30
  MOV R1, A
  SJMP MAIN
END

3rd program

ORG 0x0000
MOV R0, #10
MOV R1, #5
ADD A, R0
MOV R2, A
SUBB A, R1
MOV R2, A
MUL AB
MOV R2, A
DIV AB
HERE:
  SJMP HERE
END


4. LED Blinking and Pushbutton Control with Arduino

// (i) Blink LED

void setup() {
pinMode(13, OUTPUT);
}
void loop() {
digitalWrite(13, HIGH);
delay(1000);
digitalWrite(13, LOW);
delay(1000);
}


// (ii) Pushbutton control

const int ledPin = 13;
const int buttonPin = 2;
void setup() {
pinMode(ledPin, OUTPUT);
pinMode(buttonPin, INPUT);
}
void loop() {
int buttonState = digitalRead(buttonPin);
digitalWrite(ledPin, buttonState);
}



5. Interface 16x2 LCD to Arduino ("Hello World")

#include <LiquidCrystal.h>
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
void setup() {
lcd.begin(16, 2);
lcd.print("Hello World!");
}
void loop() {
}


6. Servo Motor Control with Arduino

#include <Servo.h>    
Servo myservo;        
void setup() {
  myservo.attach(9);  
}
void loop() {
  myservo.write(0);    
  delay(1000);        
  myservo.write(90);   
  delay(1000);        
  myservo.write(180); 
  delay(1000);  
}


7. DHT11 with Arduino (Temp & Humidity)

#include <DHT.h>              
#define DHTPIN 2             
#define DHTTYPE DHT11         
DHT dht(DHTPIN, DHTTYPE);     
void setup() {
  Serial.begin(9600);          
  dht.begin();            
void loop() {
  float h = dht.readHumidity();     
  float t = dht.readTemperature(); 
  Serial.print("Humidity: ");
  Serial.print(h);
  Serial.print(" %\tTemperature: ");
  Serial.print(t);
  Serial.println(" *C");
  delay(2000);
}



8. Python: Blink External LED with Raspberry Pi

import RPi.GPIO as GPIO
import time
led_pin = 17
GPIO.setmode(GPIO.BCM)
GPIO.setup(led_pin, GPIO.OUT)
while True:
  GPIO.output(led_pin, GPIO.HIGH) 
  time.sleep(1)                    
  GPIO.output(led_pin, GPIO.LOW)  
  time.sleep(1)                   



9. Python: Ultrasonic Sensor (HC-SR04) with Raspberry Pi

import RPi.GPIO as GPIO
import time

TRIG = 23
ECHO = 24

GPIO.setmode(GPIO.BCM)
GPIO.setup(TRIG, GPIO.OUT)
GPIO.setup(ECHO, GPIO.IN)

try:
    while True:
        GPIO.output(TRIG, False)
        time.sleep(0.5)

        GPIO.output(TRIG, True)
        time.sleep(0.00001)
        GPIO.output(TRIG, False)

        while GPIO.input(ECHO) == 0:
            pulse_start = time.time()

        while GPIO.input(ECHO) == 1:
            pulse_end = time.time()

        pulse_duration = pulse_end - pulse_start
        distance = pulse_duration * 17150  # Speed of sound: 34300 cm/s divided by 2
        distance = round(distance, 2)

        print(f"Distance: {distance} cm")

except KeyboardInterrupt:
    print("\nMeasurement stopped by user")
    GPIO.cleanup()



10. Python: Send Data to ThingSpeak from Raspberry Pi

import requests
import random
import time

API_KEY = 'YOUR_WRITE_API_KEY'
URL = 'https://api.thingspeak.com/update'

def send_data(temp):
    response = requests.post(URL, params={'api_key': API_KEY, 'field1': temp})
    print(f"Sent temp={temp}, Response: {response.status_code}")

while True:
    temperature = round(random.uniform(25.0, 30.0), 2)
    send_data(temperature)
    time.sleep(15)



11. Python: IoT System to Read Temp & Humidity (DHT11 + Raspberry Pi)

import Adafruit_DHT
import time

sensor = Adafruit_DHT.DHT11
gpio_pin = 4

while True:
    humidity, temperature = Adafruit_DHT.read_retry(sensor, gpio_pin)

    if humidity is not None and temperature is not None:
        print(f"Temp: {temperature:.1f}Â°C Humidity: {humidity:.1f}%")
    else:
        print("Sensor failure. Retrying...")

    time.sleep(2)

